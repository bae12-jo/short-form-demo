{
  "version": 3,
  "sources": ["../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/FileUploader.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/hooks/useFileUploader/useFileUploader.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/types.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/hooks/useFileUploader/types.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/hooks/useFileUploader/reducer.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/hooks/useFileUploader/actions.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/hooks/useUploadFiles/useUploadFiles.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/utils/resolveFile.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/utils/getInput.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/utils/uploadFile.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/ui/Container/Container.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/ui/DropZone/DropZone.mjs", "../../@aws-amplify/ui-react/dist/esm/hooks/useStorageURL.mjs", "../../@aws-amplify/ui-react/dist/esm/components/FilterChildren/FilterChildren.mjs", "../../@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconAssistant.mjs", "../../@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconAttach.mjs", "../../@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconCheckCircleOutline.mjs", "../../@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconEdit.mjs", "../../@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconFile.mjs", "../../@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconSend.mjs", "../../@aws-amplify/ui-react/dist/esm/primitives/Icon/icons/IconUpload.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/ui/FileList/FileList.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/ui/FileList/FileControl.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/ui/FileList/FileStatusMessage.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/ui/FileList/FileRemoveButton.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/ui/FileList/FileDetails.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/ui/FileList/FileThumbnail.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/ui/FileListHeader/FileListHeader.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/ui/FileListFooter/FileListFooter.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/ui/FilePicker/FilePicker.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/utils/checkMaxFileSize.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/utils/displayText.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/FileUploader/utils/filterAllowedFiles.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/version.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageImage/StorageImage.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/StorageManager.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/ui/Container/Container.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/ui/DropZone/DropZone.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/ui/FileList/FileList.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/ui/FileList/FileControl.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/ui/FileList/FileStatusMessage.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/ui/FileList/FileRemoveButton.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/ui/FileList/FileDetails.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/ui/FileList/FileThumbnail.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/ui/FileListHeader/FileListHeader.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/ui/FileListFooter/FileListFooter.mjs", "../../@aws-amplify/ui-react-storage/dist/esm/components/StorageManager/ui/FilePicker/FilePicker.mjs"],
  "sourcesContent": ["import * as React from 'react';\nimport { getLogger, ComponentClassName } from '@aws-amplify/ui';\nimport { VisuallyHidden } from '@aws-amplify/ui-react';\nimport { useDeprecationWarning, useDropZone, useSetUserAgent } from '@aws-amplify/ui-react-core';\nimport { useFileUploader } from './hooks/useFileUploader/useFileUploader.mjs';\nimport { useUploadFiles } from './hooks/useUploadFiles/useUploadFiles.mjs';\nimport { FileStatus } from './types.mjs';\nimport { Container } from './ui/Container/Container.mjs';\nimport { DropZone } from './ui/DropZone/DropZone.mjs';\nimport { FileList } from './ui/FileList/FileList.mjs';\nimport { FileListHeader } from './ui/FileListHeader/FileListHeader.mjs';\nimport { FileListFooter } from './ui/FileListFooter/FileListFooter.mjs';\nimport { FilePicker } from './ui/FilePicker/FilePicker.mjs';\nimport { checkMaxFileSize } from './utils/checkMaxFileSize.mjs';\nimport { defaultFileUploaderDisplayText } from './utils/displayText.mjs';\nimport { filterAllowedFiles } from './utils/filterAllowedFiles.mjs';\nimport 'aws-amplify/auth';\nimport 'aws-amplify/storage';\nimport { VERSION } from '../../version.mjs';\n\nconst logger = getLogger('Storage');\nconst MISSING_REQUIRED_PROPS_MESSAGE = '`FileUploader` requires a `maxFileCount` prop to be provided.';\nconst ACCESS_LEVEL_WITH_PATH_CALLBACK_MESSAGE = '`FileUploader` does not allow usage of a `path` callback prop with an `accessLevel` prop.';\nconst ACCESS_LEVEL_DEPRECATION_MESSAGE = '`accessLevel` has been deprecated and will be removed in a future major version. See migration notes at https://ui.docs.amplify.aws/react/connected-components/storage/FileUploader';\nconst FileUploaderBase = React.forwardRef(function FileUploader({ acceptedFileTypes = [], accessLevel, autoUpload = true, components, defaultFiles, displayText: overrideDisplayText, isResumable = false, maxFileCount, maxFileSize, onFileRemove, onUploadError, onUploadStart, onUploadSuccess, path, processFile, showThumbnails = true, useAccelerateEndpoint, }, ref) {\n    if (!maxFileCount) {\n        // eslint-disable-next-line no-console\n        console.warn(MISSING_REQUIRED_PROPS_MESSAGE);\n    }\n    if (accessLevel && typeof path === 'function') {\n        throw new Error(ACCESS_LEVEL_WITH_PATH_CALLBACK_MESSAGE);\n    }\n    useDeprecationWarning({\n        message: ACCESS_LEVEL_DEPRECATION_MESSAGE,\n        shouldWarn: !!accessLevel,\n    });\n    const Components = {\n        Container,\n        DropZone,\n        FileList,\n        FilePicker,\n        FileListHeader,\n        FileListFooter,\n        ...components,\n    };\n    const allowMultipleFiles = maxFileCount === undefined ||\n        (typeof maxFileCount === 'number' && maxFileCount > 1);\n    const displayText = {\n        ...defaultFileUploaderDisplayText,\n        ...overrideDisplayText,\n    };\n    const { getFileSizeErrorText } = displayText;\n    const getMaxFileSizeErrorMessage = (file) => {\n        return checkMaxFileSize({\n            file,\n            maxFileSize,\n            getFileSizeErrorText,\n        });\n    };\n    const { addFiles, clearFiles, files, removeUpload, queueFiles, setUploadingFile, setUploadPaused, setUploadProgress, setUploadSuccess, setUploadResumed, } = useFileUploader(defaultFiles);\n    React.useImperativeHandle(ref, () => ({ clearFiles }));\n    const { dragState, ...dropZoneProps } = useDropZone({\n        acceptedFileTypes,\n        onDropComplete: ({ acceptedFiles, rejectedFiles }) => {\n            if (rejectedFiles && rejectedFiles.length > 0) {\n                logger.warn('Rejected files: ', rejectedFiles);\n            }\n            // We need to filter out files by extension here,\n            // we don't get filenames on the drag event, only on drop\n            const _acceptedFiles = filterAllowedFiles(acceptedFiles, acceptedFileTypes);\n            addFiles({\n                files: _acceptedFiles,\n                status: autoUpload ? FileStatus.QUEUED : FileStatus.ADDED,\n                getFileErrorMessage: getMaxFileSizeErrorMessage,\n            });\n        },\n    });\n    useUploadFiles({\n        accessLevel,\n        files,\n        isResumable,\n        maxFileCount,\n        onUploadError,\n        onUploadSuccess,\n        onUploadStart,\n        setUploadingFile,\n        setUploadProgress,\n        setUploadSuccess,\n        processFile,\n        path,\n        useAccelerateEndpoint,\n    });\n    const onFilePickerChange = (event) => {\n        const { files } = event.target;\n        if (!files || files.length === 0) {\n            return;\n        }\n        addFiles({\n            files: Array.from(files),\n            status: autoUpload ? FileStatus.QUEUED : FileStatus.ADDED,\n            getFileErrorMessage: getMaxFileSizeErrorMessage,\n        });\n    };\n    const onClearAll = () => {\n        clearFiles();\n    };\n    const onUploadAll = () => {\n        queueFiles();\n    };\n    const onPauseUpload = ({ id, uploadTask }) => {\n        uploadTask.pause();\n        setUploadPaused({ id });\n    };\n    const onResumeUpload = ({ id, uploadTask }) => {\n        uploadTask.resume();\n        setUploadResumed({ id });\n    };\n    const onCancelUpload = ({ id, uploadTask }) => {\n        // At this time we don't know if the delete\n        // permissions are enabled (required to cancel upload),\n        // so we do a pause instead and remove from files\n        uploadTask.pause();\n        removeUpload({ id });\n    };\n    const onDeleteUpload = ({ id }) => {\n        // At this time we don't know if the delete\n        // permissions are enabled, so we do a soft delete\n        // from file list, but don't remove from storage\n        removeUpload({ id });\n        if (typeof onFileRemove === 'function') {\n            const file = files.find((file) => file.id === id);\n            if (file) {\n                const key = file.resolvedKey ?? file.key;\n                onFileRemove({ key });\n            }\n        }\n    };\n    // checks if all downloads completed to 100%\n    const allUploadsSuccessful = files.length === 0\n        ? false\n        : files.every((file) => file?.status === FileStatus.UPLOADED);\n    // Displays if over max files\n    const hasMaxFilesError = files.filter((file) => file.progress < 100).length > maxFileCount;\n    const uploadedFilesLength = files.filter((file) => file?.status === FileStatus.UPLOADED).length;\n    const remainingFilesCount = files.length - uploadedFilesLength;\n    // number of files selected for upload when autoUpload is turned off\n    const selectedFilesCount = autoUpload ? 0 : remainingFilesCount;\n    const hasFiles = files.length > 0;\n    const hasUploadActions = !autoUpload && remainingFilesCount > 0;\n    const hiddenInput = React.useRef(null);\n    function handleClick() {\n        if (hiddenInput.current) {\n            hiddenInput.current.click();\n            hiddenInput.current.value = '';\n        }\n    }\n    useSetUserAgent({\n        componentName: 'FileUploader',\n        packageName: 'react-storage',\n        version: VERSION,\n    });\n    return (React.createElement(Components.Container, { className: `${ComponentClassName.FileUploader} ${hasFiles ? ComponentClassName.FileUploaderPreviewer : ''}` },\n        React.createElement(Components.DropZone, { inDropZone: dragState !== 'inactive', ...dropZoneProps, displayText: displayText },\n            React.createElement(React.Fragment, null,\n                React.createElement(Components.FilePicker, { onClick: handleClick }, displayText.browseFilesText),\n                React.createElement(VisuallyHidden, null,\n                    React.createElement(\"input\", { type: \"file\", tabIndex: -1, ref: hiddenInput, onChange: onFilePickerChange, multiple: allowMultipleFiles, accept: acceptedFileTypes.join(',') })))),\n        hasFiles ? (React.createElement(Components.FileListHeader, { allUploadsSuccessful: allUploadsSuccessful, displayText: displayText, fileCount: files.length, remainingFilesCount: remainingFilesCount, selectedFilesCount: selectedFilesCount })) : null,\n        React.createElement(Components.FileList, { displayText: displayText, files: files, isResumable: isResumable, onCancelUpload: onCancelUpload, onDeleteUpload: onDeleteUpload, onResume: onResumeUpload, onPause: onPauseUpload, showThumbnails: showThumbnails, hasMaxFilesError: hasMaxFilesError, maxFileCount: maxFileCount }),\n        hasUploadActions ? (React.createElement(Components.FileListFooter, { displayText: displayText, remainingFilesCount: remainingFilesCount, onClearAll: onClearAll, onUploadAll: onUploadAll })) : null));\n});\n// pass an empty object as first param to avoid destructive action on `FileUploaderBase`\nconst FileUploader = Object.assign({}, FileUploaderBase, {\n    Container,\n    DropZone,\n    FileList,\n    FileListHeader,\n    FileListFooter,\n    FilePicker,\n});\n\nexport { ACCESS_LEVEL_DEPRECATION_MESSAGE, ACCESS_LEVEL_WITH_PATH_CALLBACK_MESSAGE, FileUploader, MISSING_REQUIRED_PROPS_MESSAGE };\n", "import React__default from 'react';\nimport { isObject } from '@aws-amplify/ui';\nimport { FileStatus } from '../../types.mjs';\nimport { fileUploaderStateReducer } from './reducer.mjs';\nimport { addFilesAction, clearFilesAction, queueFilesAction, setUploadingFileAction, setUploadProgressAction, setUploadSuccessAction, setUploadStatusAction, removeUploadAction } from './actions.mjs';\n\nconst isDefaultFile = (file) => !!(isObject(file) && file.key);\nconst createFileFromDefault = (file) => isDefaultFile(file)\n    ? { ...file, id: file.key, status: FileStatus.UPLOADED }\n    : undefined;\nfunction useFileUploader(defaultFiles = []) {\n    const [{ files }, dispatch] = React__default.useReducer(fileUploaderStateReducer, {\n        files: (Array.isArray(defaultFiles)\n            ? defaultFiles.map(createFileFromDefault).filter((file) => !!file)\n            : []),\n    });\n    const dispatchers = React__default.useMemo(() => ({\n        addFiles: (params) => {\n            dispatch(addFilesAction(params));\n        },\n        clearFiles: () => {\n            dispatch(clearFilesAction());\n        },\n        queueFiles: () => {\n            dispatch(queueFilesAction());\n        },\n        setUploadingFile: (params) => {\n            dispatch(setUploadingFileAction(params));\n        },\n        setUploadProgress: (params) => {\n            dispatch(setUploadProgressAction(params));\n        },\n        setUploadSuccess: (params) => {\n            dispatch(setUploadSuccessAction(params));\n        },\n        setUploadPaused: ({ id }) => {\n            dispatch(setUploadStatusAction({ id, status: FileStatus.PAUSED }));\n        },\n        setUploadResumed: ({ id }) => {\n            dispatch(setUploadStatusAction({ id, status: FileStatus.UPLOADING }));\n        },\n        removeUpload: ({ id }) => {\n            dispatch(removeUploadAction({ id }));\n        },\n    }), []);\n    return { ...dispatchers, files };\n}\n\nexport { useFileUploader };\n", "var FileStatus;\n(function (FileStatus) {\n    FileStatus[\"ADDED\"] = \"added\";\n    FileStatus[\"QUEUED\"] = \"queued\";\n    FileStatus[\"UPLOADING\"] = \"uploading\";\n    FileStatus[\"PAUSED\"] = \"paused\";\n    FileStatus[\"ERROR\"] = \"error\";\n    FileStatus[\"UPLOADED\"] = \"uploaded\";\n})(FileStatus || (FileStatus = {}));\n\nexport { FileStatus };\n", "var FileUploaderActionTypes;\n(function (FileUploaderActionTypes) {\n    FileUploaderActionTypes[FileUploaderActionTypes[\"ADD_FILES\"] = 0] = \"ADD_FILES\";\n    FileUploaderActionTypes[FileUploaderActionTypes[\"CLEAR_FILES\"] = 1] = \"CLEAR_FILES\";\n    FileUploaderActionTypes[FileUploaderActionTypes[\"QUEUE_FILES\"] = 2] = \"QUEUE_FILES\";\n    FileUploaderActionTypes[FileUploaderActionTypes[\"REMOVE_UPLOAD\"] = 3] = \"REMOVE_UPLOAD\";\n    FileUploaderActionTypes[FileUploaderActionTypes[\"SET_STATUS\"] = 4] = \"SET_STATUS\";\n    FileUploaderActionTypes[FileUploaderActionTypes[\"SET_PROCESSED_FILE_KEY\"] = 5] = \"SET_PROCESSED_FILE_KEY\";\n    FileUploaderActionTypes[FileUploaderActionTypes[\"SET_STATUS_UPLOADED\"] = 6] = \"SET_STATUS_UPLOADED\";\n    FileUploaderActionTypes[FileUploaderActionTypes[\"SET_STATUS_UPLOADING\"] = 7] = \"SET_STATUS_UPLOADING\";\n    FileUploaderActionTypes[FileUploaderActionTypes[\"SET_UPLOAD_PROGRESS\"] = 8] = \"SET_UPLOAD_PROGRESS\";\n})(FileUploaderActionTypes || (FileUploaderActionTypes = {}));\n\nexport { FileUploaderActionTypes };\n", "import { FileStatus } from '../../types.mjs';\nimport { FileUploaderActionTypes } from './types.mjs';\n\nconst updateFiles = (files, nextFileData) => files.reduce((files, currentFile) => {\n    if (currentFile.id === nextFileData.id) {\n        return [...files, { ...currentFile, ...nextFileData }];\n    }\n    return [...files, currentFile];\n}, []);\nfunction fileUploaderStateReducer(state, action) {\n    switch (action.type) {\n        case FileUploaderActionTypes.ADD_FILES: {\n            const { files, status } = action;\n            const newUploads = files.map((file) => {\n                const errorText = action.getFileErrorMessage(file);\n                return {\n                    // make sure id is unique,\n                    // we only use it internally and don't send it to Storage\n                    id: `${Date.now()}-${file.name}`,\n                    file,\n                    error: errorText,\n                    key: file.name,\n                    status: errorText ? FileStatus.ERROR : status,\n                    isImage: file.type.startsWith('image/'),\n                    progress: -1,\n                };\n            });\n            const newFiles = [...state.files, ...newUploads];\n            return { ...state, files: newFiles };\n        }\n        case FileUploaderActionTypes.CLEAR_FILES: {\n            return { ...state, files: [] };\n        }\n        case FileUploaderActionTypes.QUEUE_FILES: {\n            const { files } = state;\n            const newFiles = files.reduce((files, currentFile) => [\n                ...files,\n                {\n                    ...currentFile,\n                    ...(currentFile.status === FileStatus.ADDED\n                        ? { status: FileStatus.QUEUED }\n                        : {}),\n                },\n            ], []);\n            return { ...state, files: newFiles };\n        }\n        case FileUploaderActionTypes.SET_STATUS_UPLOADING: {\n            const { id, uploadTask } = action;\n            const status = FileStatus.UPLOADING;\n            const progress = 0;\n            const nextFileData = { status, progress, id, uploadTask };\n            const files = updateFiles(state.files, nextFileData);\n            return { ...state, files };\n        }\n        case FileUploaderActionTypes.SET_STATUS_UPLOADED: {\n            const files = updateFiles(state.files, action);\n            return { ...state, files };\n        }\n        case FileUploaderActionTypes.SET_UPLOAD_PROGRESS: {\n            const { id, progress } = action;\n            const files = updateFiles(state.files, { id, progress });\n            return { ...state, files };\n        }\n        case FileUploaderActionTypes.SET_STATUS: {\n            const { id, status } = action;\n            const files = updateFiles(state.files, { id, status });\n            return { ...state, files };\n        }\n        case FileUploaderActionTypes.REMOVE_UPLOAD: {\n            const { id } = action;\n            const { files } = state;\n            const newFiles = files.reduce((files, currentFile) => {\n                // remove by not returning currentFile\n                return currentFile.id === id ? [...files] : [...files, currentFile];\n            }, []);\n            return { ...state, files: newFiles };\n        }\n    }\n}\n\nexport { fileUploaderStateReducer };\n", "import { FileStatus } from '../../types.mjs';\nimport { FileUploaderActionTypes } from './types.mjs';\n\nconst addFilesAction = ({ files, status, getFileErrorMessage, }) => ({\n    type: FileUploaderActionTypes.ADD_FILES,\n    files,\n    status,\n    getFileErrorMessage,\n});\nconst clearFilesAction = () => ({\n    type: FileUploaderActionTypes.CLEAR_FILES,\n});\nconst queueFilesAction = () => ({\n    type: FileUploaderActionTypes.QUEUE_FILES,\n});\nconst setUploadingFileAction = ({ id, uploadTask, }) => ({\n    type: FileUploaderActionTypes.SET_STATUS_UPLOADING,\n    id,\n    uploadTask,\n});\nconst setUploadProgressAction = ({ id, progress, }) => ({\n    type: FileUploaderActionTypes.SET_UPLOAD_PROGRESS,\n    id,\n    progress,\n});\nconst setUploadStatusAction = ({ id, status, }) => ({\n    type: FileUploaderActionTypes.SET_STATUS,\n    id,\n    status,\n});\nconst setUploadSuccessAction = ({ id, resolvedKey, }) => ({\n    type: FileUploaderActionTypes.SET_STATUS_UPLOADED,\n    id,\n    resolvedKey,\n    status: FileStatus.UPLOADED,\n});\nconst removeUploadAction = ({ id }) => ({\n    type: FileUploaderActionTypes.REMOVE_UPLOAD,\n    id,\n});\n\nexport { addFilesAction, clearFilesAction, queueFilesAction, removeUploadAction, setUploadProgressAction, setUploadStatusAction, setUploadSuccessAction, setUploadingFileAction };\n", "import * as React from 'react';\nimport { isFunction } from '@aws-amplify/ui';\nimport { getInput } from '../../utils/getInput.mjs';\nimport { uploadFile } from '../../utils/uploadFile.mjs';\nimport { FileStatus } from '../../types.mjs';\n\nfunction useUploadFiles({ accessLevel, files, isResumable, maxFileCount, onUploadError, onUploadStart, onUploadSuccess, path, processFile, setUploadingFile, setUploadProgress, setUploadSuccess, useAccelerateEndpoint, }) {\n    React.useEffect(() => {\n        const filesReadyToUpload = files.filter((file) => file.status === FileStatus.QUEUED);\n        if (filesReadyToUpload.length > maxFileCount) {\n            return;\n        }\n        for (const { file, key, id } of filesReadyToUpload) {\n            const onProgress = (event) => {\n                /**\n                 * When a file is zero bytes, the progress.total will equal zero.\n                 * Therefore, this will prevent a divide by zero error.\n                 */\n                const progress = event.totalBytes === undefined || event.totalBytes === 0\n                    ? 100\n                    : Math.floor((event.transferredBytes / event.totalBytes) * 100);\n                setUploadProgress({ id, progress });\n            };\n            if (file) {\n                const input = getInput({\n                    accessLevel,\n                    file,\n                    key,\n                    onProgress,\n                    path,\n                    processFile,\n                    useAccelerateEndpoint,\n                });\n                uploadFile({\n                    input,\n                    onComplete: (event) => {\n                        const resolvedKey = event.key ??\n                            event.path;\n                        if (isFunction(onUploadSuccess)) {\n                            onUploadSuccess({ key: resolvedKey });\n                        }\n                        setUploadSuccess({ id, resolvedKey });\n                    },\n                    onError: ({ key, error }) => {\n                        if (isFunction(onUploadError)) {\n                            onUploadError(error.message, { key });\n                        }\n                    },\n                    onStart: ({ key, uploadTask }) => {\n                        if (isFunction(onUploadStart)) {\n                            onUploadStart({ key });\n                        }\n                        setUploadingFile({ id, uploadTask });\n                    },\n                });\n            }\n        }\n    }, [\n        files,\n        accessLevel,\n        isResumable,\n        setUploadProgress,\n        setUploadingFile,\n        onUploadError,\n        onUploadSuccess,\n        onUploadStart,\n        maxFileCount,\n        setUploadSuccess,\n        processFile,\n        path,\n        useAccelerateEndpoint,\n    ]);\n}\n\nexport { useUploadFiles };\n", "import { isFunction } from '@aws-amplify/ui';\n\n/**\n * Utility function that takes the processFile prop, along with a file a key\n * and returns a Promise that resolves to { file, key, ..rest }\n * regardless if processFile is defined and if it is sync or async\n */\nconst resolveFile = ({ processFile, ...input }) => {\n    return new Promise((resolve, reject) => {\n        const result = isFunction(processFile) ? processFile(input) : input;\n        if (result instanceof Promise) {\n            result.then(resolve).catch(reject);\n        }\n        else {\n            resolve(result);\n        }\n    });\n};\n\nexport { resolveFile };\n", "import { fetchAuthSession } from 'aws-amplify/auth';\nimport { isFunction, isString } from '@aws-amplify/ui';\nimport { resolveFile } from './resolveFile.mjs';\n\nconst getInput = ({ accessLevel, file, key, onProgress, path, processFile, useAccelerateEndpoint, }) => {\n    return async () => {\n        const hasCallbackPath = isFunction(path);\n        const hasStringPath = isString(path);\n        const hasKeyInput = !!accessLevel && !hasCallbackPath;\n        const { file: data, key: processedKey, ...rest } = await resolveFile({ file, key, processFile });\n        const contentType = file.type || 'binary/octet-stream';\n        // IMPORTANT: always pass `...rest` here for backwards compatibility\n        const options = { contentType, onProgress, useAccelerateEndpoint, ...rest };\n        let inputResult;\n        if (hasKeyInput) {\n            // legacy handling of `path` is to prefix to `fileKey`\n            const resolvedKey = hasStringPath\n                ? `${path}${processedKey}`\n                : processedKey;\n            inputResult = {\n                data,\n                key: resolvedKey,\n                options: { ...options, accessLevel },\n            };\n        }\n        else {\n            const { identityId } = await fetchAuthSession();\n            const resolvedPath = `${hasCallbackPath ? path({ identityId }) : path}${processedKey}`;\n            inputResult = { data: file, path: resolvedPath, options };\n        }\n        return inputResult;\n    };\n};\n\nexport { getInput };\n", "import { uploadData } from 'aws-amplify/storage';\nimport { isFunction } from '@aws-amplify/ui';\n\nasync function uploadFile({ input, onError, onStart, onComplete, }) {\n    const resolvedInput = await input();\n    const uploadTask = uploadData(resolvedInput);\n    const key = resolvedInput?.key ??\n        resolvedInput?.path;\n    if (isFunction(onStart)) {\n        onStart({ key, uploadTask });\n    }\n    uploadTask.result\n        .then((result) => {\n        if (isFunction(onComplete) && uploadTask.state === 'SUCCESS') {\n            onComplete(result);\n        }\n    })\n        .catch((error) => {\n        if (isFunction(onError)) {\n            onError({ key, error });\n        }\n    });\n    return uploadTask;\n}\n\nexport { uploadFile };\n", "import React__default from 'react';\nimport { View } from '@aws-amplify/ui-react';\n\nfunction Container({ children, className, }) {\n    return React__default.createElement(View, { className: className }, children);\n}\n\nexport { Container };\n", "import React__default from 'react';\nimport { classNames, classNameModifier, ComponentClassName } from '@aws-amplify/ui';\nimport { View, Text } from '@aws-amplify/ui-react';\nimport { useIcons, IconUpload } from '@aws-amplify/ui-react/internal';\n\nfunction DropZone({ children, displayText, inDropZone, onDragEnter, onDragLeave, onDragOver, onDragStart, onDrop, testId, }) {\n    const { dropFilesText } = displayText;\n    const icons = useIcons('storageManager');\n    return (React__default.createElement(View, { className: classNames(inDropZone &&\n            classNameModifier(ComponentClassName.FileUploaderDropZone, 'active'), ComponentClassName.FileUploaderDropZone), \"data-testid\": testId, onDragStart: onDragStart, onDragEnter: onDragEnter, onDragLeave: onDragLeave, onDrop: onDrop, onDragOver: onDragOver },\n        React__default.createElement(View, { as: \"span\", \"aria-hidden\": true, className: ComponentClassName.FileUploaderDropZoneIcon }, icons?.upload ?? React__default.createElement(IconUpload, null)),\n        React__default.createElement(Text, { className: ComponentClassName.FileUploaderDropZoneText }, dropFilesText),\n        children));\n}\n\nexport { DropZone };\n", "import * as React from 'react';\nimport * as Storage from 'aws-amplify/storage';\nimport { isFunction } from '@aws-amplify/ui';\nimport { useHasValueUpdated } from '@aws-amplify/ui-react-core';\n\nconst useStorageURL = ({ key, options, fallbackURL, onStorageGetError, }) => {\n    const [url, setURL] = React.useState();\n    const hasKeyUpdated = useHasValueUpdated(key);\n    React.useEffect(() => {\n        if (!hasKeyUpdated) {\n            return;\n        }\n        let ignore = false;\n        const input = { key, options };\n        Storage.getUrl(input)\n            .then(({ url }) => {\n            if (ignore) {\n                return;\n            }\n            setURL(url.toString());\n        })\n            .catch((error) => {\n            if (ignore) {\n                return;\n            }\n            if (isFunction(onStorageGetError)) {\n                onStorageGetError(error);\n            }\n            if (fallbackURL) {\n                setURL(fallbackURL);\n            }\n            return () => {\n                ignore = true;\n            };\n        });\n    }, [key, options, fallbackURL, onStorageGetError, hasKeyUpdated]);\n    return url;\n};\n\nexport { useStorageURL };\n", "import React__default from 'react';\n\nconst FilterChildren = ({ allowedFilters, children = null, targetFilter, }) => {\n    const showContent = Array.isArray(allowedFilters) &&\n        allowedFilters.some((filter) => filter === targetFilter);\n    return showContent ? React__default.createElement(React__default.Fragment, null, children) : null;\n};\n\nexport { FilterChildren };\n", "import { classNames, ComponentClassName } from '@aws-amplify/ui';\nimport * as React from 'react';\nimport { View } from '../../View/View.mjs';\n\n/**\n * @internal For internal Amplify UI use only. May be removed in a future release.\n */\nconst IconAssistant = (props) => {\n    const { className, ...rest } = props;\n    return (React.createElement(View, { as: \"span\", width: \"1em\", height: \"1em\", className: classNames(ComponentClassName.Icon, className), ...rest },\n        React.createElement(\"svg\", { width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n            React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M13.8548 1.40981C12.693 0.801759 11.3069 0.801759 10.1451 1.40981L2.14518 5.59679C0.826447 6.28698 0 7.65232 0 9.14075V16.8593C0 18.3477 0.826447 19.713 2.14518 20.4032L10.1451 24.5902C11.3069 25.1982 12.693 25.1982 13.8548 24.5902L21.8547 20.4032C23.1735 19.713 23.9999 18.3477 23.9999 16.8592V9.14075C23.9999 7.65232 23.1735 6.28698 21.8547 5.59679L13.8548 1.40981ZM12.9258 6.05676C12.5872 5.22732 11.4127 5.22732 11.0741 6.05676L9.42869 10.0877C9.31871 10.3572 9.0968 10.5653 8.82088 10.6579L4.665 12.0519C3.7557 12.3569 3.7557 13.6431 4.665 13.9481L8.82088 15.3421C9.0968 15.4347 9.31871 15.6428 9.42869 15.9123L11.0741 19.9432C11.4127 20.7727 12.5872 20.7727 12.9258 19.9432L14.5712 15.9123C14.6812 15.6428 14.9031 15.4347 15.179 15.3421L19.3349 13.9481C20.2442 13.6431 20.2442 12.3569 19.3349 12.0519L15.179 10.6579C14.9031 10.5653 14.6812 10.3572 14.5712 10.0877L12.9258 6.05676Z\", fill: \"currentColor\" }))));\n};\n\nexport { IconAssistant };\n", "import { classNames, ComponentClassName } from '@aws-amplify/ui';\nimport * as React from 'react';\nimport { View } from '../../View/View.mjs';\n\n/**\n * @internal For internal Amplify UI use only. May be removed in a future release.\n */\nconst IconAttach = (props) => {\n    const { className, ...rest } = props;\n    return (React.createElement(View, { as: \"span\", width: \"1em\", height: \"1em\", className: classNames(ComponentClassName.Icon, className), ...rest },\n        React.createElement(\"svg\", { width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n            React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M14.3928 1.93491L4.23565 11.8583C2.3257 13.7243 2.3257 16.7379 4.23565 18.6039C6.161 20.4849 9.29378 20.4849 11.2191 18.6039L21.2003 8.85257C22.3571 7.72235 22.3571 5.86149 21.2003 4.73128C20.0748 3.63171 18.2753 3.63857 17.1582 4.74668L7.17456 14.6503C6.86543 14.9523 6.8654 15.4303 7.17454 15.7323C7.49908 16.0494 8.03642 16.0494 8.36095 15.7323L18.338 5.98493L19.9926 7.67849L10.0155 17.4259C8.77102 18.6417 6.76446 18.6417 5.51997 17.4259C4.26127 16.1962 4.26007 14.1915 5.51637 12.9603L15.4908 3.06578C17.5259 1.04696 20.8044 1.03447 22.8548 3.03772C24.9625 5.09681 24.9625 8.48703 22.8548 10.5461L12.8737 20.2975C10.0284 23.0773 5.42639 23.0773 2.58108 20.2975C-0.279632 17.5026 -0.279632 12.9596 2.58108 10.1647L12.7383 0.241356L14.3928 1.93491Z\", fill: \"currentColor\" }))));\n};\n\nexport { IconAttach };\n", "import { classNames, ComponentClassName } from '@aws-amplify/ui';\nimport * as React from 'react';\nimport { View } from '../../View/View.mjs';\n\n/**\n * @internal For internal Amplify UI use only. May be removed in a future release.\n */\nconst IconCheckCircleOutline = (props) => {\n    const { className, ...rest } = props;\n    return (React.createElement(View, { as: \"span\", width: \"1em\", height: \"1em\", className: classNames(ComponentClassName.Icon, className), ...rest }));\n};\n\nexport { IconCheckCircleOutline };\n", "import { classNames, ComponentClassName } from '@aws-amplify/ui';\nimport * as React from 'react';\nimport { View } from '../../View/View.mjs';\n\n/**\n * @internal For internal Amplify UI use only. May be removed in a future release.\n */\nconst IconEdit = (props) => {\n    const { className, ...rest } = props;\n    return (React.createElement(View, { as: \"span\", width: \"1em\", height: \"1em\", className: classNames(ComponentClassName.Icon, className), ...rest },\n        React.createElement(\"svg\", { width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n            React.createElement(\"path\", { d: \"M3 21h3.75L17.81 9.94l-3.75-3.75L3 17.25V21zm2-2.92l9.06-9.06.92.92L5.92 19H5v-.92zM18.37 3.29a.996.996 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83a.996.996 0 000-1.41l-2.34-2.34z\", fill: \"currentColor\" }))));\n};\n\nexport { IconEdit };\n", "import { classNames, ComponentClassName } from '@aws-amplify/ui';\nimport * as React from 'react';\nimport { View } from '../../View/View.mjs';\n\n/**\n * @internal For internal Amplify UI use only. May be removed in a future release.\n */\nconst IconFile = (props) => {\n    const { className, ...rest } = props;\n    return (React.createElement(View, { as: \"span\", width: \"1em\", height: \"1em\", className: classNames(ComponentClassName.Icon, className), ...rest },\n        React.createElement(\"svg\", { width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n            React.createElement(\"path\", { d: \"M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z\", fill: \"currentColor\" }))));\n};\n\nexport { IconFile };\n", "import { classNames, ComponentClassName } from '@aws-amplify/ui';\nimport * as React from 'react';\nimport { View } from '../../View/View.mjs';\n\n/**\n * @internal For internal Amplify UI use only. May be removed in a future release.\n */\nconst IconSend = (props) => {\n    const { className, ...rest } = props;\n    return (React.createElement(View, { as: \"span\", width: \"1em\", height: \"1em\", className: classNames(ComponentClassName.Icon, className), ...rest },\n        React.createElement(\"svg\", { width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n            React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M1.34374 0.774436C1.72319 0.451324 2.26162 0.393083 2.70138 0.627584L23.173 11.544C23.5704 11.7559 23.8177 12.1704 23.8155 12.6207C23.8133 13.071 23.5618 13.4831 23.1624 13.691L2.69073 24.3477C2.24914 24.5776 1.71196 24.5144 1.33575 24.1884C0.959534 23.8624 0.820634 23.3396 0.98539 22.8698L4.58366 12.6099L0.982433 2.09133C0.821002 1.61982 0.964295 1.09755 1.34374 0.774436ZM6.72819 13.8281L4.29043 20.779L17.6432 13.8281H6.72819ZM17.7477 11.4013H6.735L4.27542 4.21725L17.7477 11.4013Z\", fill: \"currentColor\" }))));\n};\n\nexport { IconSend };\n", "import { classNames, ComponentClassName } from '@aws-amplify/ui';\nimport * as React from 'react';\nimport { View } from '../../View/View.mjs';\n\n/**\n * @internal For internal Amplify UI use only. May be removed in a future release.\n */\nconst IconUpload = (props) => {\n    const { className, ...rest } = props;\n    return (React.createElement(View, { as: \"span\", width: \"1em\", height: \"1em\", className: classNames(ComponentClassName.Icon, className), ...rest },\n        React.createElement(\"svg\", { width: \"24\", height: \"24\", viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\" },\n            React.createElement(\"path\", { d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h7v5h5v11zM8 15.01l1.41 1.41L11 14.84V19h2v-4.16l1.59 1.59L16 15.01 12.01 11 8 15.01z\", fill: \"currentColor\" }))));\n};\n\nexport { IconUpload };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { View, Alert } from '@aws-amplify/ui-react';\nimport { FileStatus } from '../../types.mjs';\nimport { FileControl } from './FileControl.mjs';\n\nfunction FileList({ displayText, files, hasMaxFilesError, isResumable, onCancelUpload, onDeleteUpload, onResume, onPause, showThumbnails, maxFileCount, }) {\n    if (files.length < 1) {\n        return null;\n    }\n    const { getMaxFilesErrorText } = displayText;\n    const headingMaxFiles = getMaxFilesErrorText(maxFileCount);\n    return (React__default.createElement(View, { className: ComponentClassName.FileUploaderFileList },\n        files.map((storageFile) => {\n            const { file, status, progress, error, key, isImage, id, uploadTask } = storageFile;\n            const thumbnailUrl = file && isImage ? URL.createObjectURL(file) : '';\n            const loaderIsDeterminate = isResumable ? progress > 0 : true;\n            const isUploading = status === FileStatus.UPLOADING;\n            const onRemove = () => {\n                if (isResumable &&\n                    (status === FileStatus.UPLOADING || status === FileStatus.PAUSED) &&\n                    uploadTask) {\n                    onCancelUpload({ id, uploadTask });\n                }\n                else {\n                    onDeleteUpload({ id });\n                }\n            };\n            const handlePauseUpload = () => {\n                if (uploadTask) {\n                    onPause({ id, uploadTask });\n                }\n            };\n            const handleResumeUpload = () => {\n                if (uploadTask) {\n                    onResume({ id, uploadTask });\n                }\n            };\n            return (React__default.createElement(FileControl, { displayName: key, errorMessage: error, displayText: displayText, isImage: isImage, isUploading: isUploading, isResumable: isResumable, key: id, loaderIsDeterminate: loaderIsDeterminate, onRemove: onRemove, onPause: handlePauseUpload, onResume: handleResumeUpload, progress: progress, showThumbnails: showThumbnails, size: file?.size, status: status, thumbnailUrl: thumbnailUrl }));\n        }),\n        hasMaxFilesError && (React__default.createElement(Alert, { variation: \"error\", heading: headingMaxFiles }))));\n}\n\nexport { FileList };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { View, Loader, Button } from '@aws-amplify/ui-react';\nimport { FileStatus } from '../../types.mjs';\nimport { FileStatusMessage } from './FileStatusMessage.mjs';\nimport { FileRemoveButton } from './FileRemoveButton.mjs';\nimport { UploadDetails } from './FileDetails.mjs';\nimport { FileThumbnail } from './FileThumbnail.mjs';\n\nfunction FileControl({ onPause, onResume, displayName, errorMessage, isImage, isResumable, loaderIsDeterminate, onRemove, progress, showThumbnails = true, size, status, displayText, thumbnailUrl, }) {\n    const { getPausedText, getUploadingText, uploadSuccessfulText, pauseButtonText, resumeButtonText, } = displayText;\n    return (React__default.createElement(View, { className: ComponentClassName.FileUploaderFile },\n        React__default.createElement(View, { className: ComponentClassName.FileUploaderFileWrapper },\n            showThumbnails ? (React__default.createElement(FileThumbnail, { isImage: isImage, fileName: displayName, url: thumbnailUrl })) : null,\n            React__default.createElement(UploadDetails, { displayName: displayName, fileSize: size }),\n            status === FileStatus.UPLOADING ? (React__default.createElement(Loader, { className: ComponentClassName.FileUploaderLoader, variation: \"linear\", percentage: progress, isDeterminate: loaderIsDeterminate, isPercentageTextHidden: true })) : null,\n            isResumable &&\n                (status === FileStatus.UPLOADING || status === FileStatus.PAUSED) ? (status === FileStatus.PAUSED ? (React__default.createElement(Button, { onClick: onResume, size: \"small\", variation: \"link\" }, resumeButtonText)) : (React__default.createElement(Button, { onClick: onPause, size: \"small\", variation: \"link\" }, pauseButtonText))) : null,\n            React__default.createElement(FileRemoveButton, { altText: `Remove file ${displayName}`, onClick: onRemove })),\n        React__default.createElement(FileStatusMessage, { uploadSuccessfulText: uploadSuccessfulText, getUploadingText: getUploadingText, getPausedText: getPausedText, status: status, errorMessage: errorMessage, percentage: progress })));\n}\n\nexport { FileControl };\n", "import React__default from 'react';\nimport { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\nimport { Text, View } from '@aws-amplify/ui-react';\nimport { useIcons, IconError, IconCheck } from '@aws-amplify/ui-react/internal';\nimport { FileStatus } from '../../types.mjs';\n\nconst FileStatusMessage = ({ errorMessage, getPausedText, getUploadingText, percentage, status, uploadSuccessfulText, }) => {\n    const icons = useIcons('storageManager');\n    switch (status) {\n        case FileStatus.UPLOADING: {\n            return (React__default.createElement(Text, { className: ComponentClassName.FileUploaderFileStatus }, getUploadingText(percentage)));\n        }\n        case FileStatus.PAUSED:\n            return (React__default.createElement(Text, { className: ComponentClassName.FileUploaderFileStatus }, getPausedText(percentage)));\n        case FileStatus.UPLOADED:\n            return (React__default.createElement(Text, { className: classNames(ComponentClassName.FileUploaderFileStatus, classNameModifier(ComponentClassName.FileUploaderFileStatus, 'success')) },\n                React__default.createElement(View, { as: \"span\", fontSize: \"xl\" }, icons?.success ?? React__default.createElement(IconCheck, null)),\n                uploadSuccessfulText));\n        case FileStatus.ERROR:\n            return (React__default.createElement(Text, { className: classNames(ComponentClassName.FileUploaderFileStatus, classNameModifier(ComponentClassName.FileUploaderFileStatus, 'error')) },\n                React__default.createElement(View, { as: \"span\", fontSize: \"xl\" }, icons?.error ?? React__default.createElement(IconError, null)),\n                errorMessage));\n        default:\n            return null;\n    }\n};\n\nexport { FileStatusMessage };\n", "import React__default from 'react';\nimport { useIcons, IconClose } from '@aws-amplify/ui-react/internal';\nimport { Button, VisuallyHidden, View } from '@aws-amplify/ui-react';\n\nconst FileRemoveButton = ({ altText, onClick, }) => {\n    const icons = useIcons('storageManager');\n    return (React__default.createElement(Button, { size: \"small\", onClick: onClick, testId: \"storage-manager-remove-button\" },\n        React__default.createElement(VisuallyHidden, null, altText),\n        React__default.createElement(View, { as: \"span\", \"aria-hidden\": true, fontSize: \"medium\" }, icons?.remove ?? React__default.createElement(IconClose, null))));\n};\n\nexport { FileRemoveButton };\n", "import React__default from 'react';\nimport { ComponentClassName, humanFileSize } from '@aws-amplify/ui';\nimport { View, Text } from '@aws-amplify/ui-react';\n\nconst UploadDetails = ({ displayName, fileSize, }) => {\n    return (React__default.createElement(React__default.Fragment, null,\n        React__default.createElement(View, { className: ComponentClassName.FileUploaderFileMain },\n            React__default.createElement(Text, { className: ComponentClassName.FileUploaderFileName }, displayName)),\n        React__default.createElement(Text, { as: \"span\", className: ComponentClassName.FileUploaderFileSize }, fileSize ? humanFileSize(fileSize, true) : '')));\n};\n\nexport { UploadDetails };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { Image, View } from '@aws-amplify/ui-react';\nimport { useIcons, IconFile } from '@aws-amplify/ui-react/internal';\n\nconst FileThumbnail = ({ fileName, isImage, url, }) => {\n    const icons = useIcons('storageManager');\n    const thumbnail = isImage ? (React__default.createElement(Image, { alt: fileName, src: url })) : (icons?.file ?? React__default.createElement(IconFile, null));\n    return (React__default.createElement(View, { className: ComponentClassName.FileUploaderFileImage }, thumbnail));\n};\n\nexport { FileThumbnail };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { Text } from '@aws-amplify/ui-react';\n\nfunction FileListHeader({ allUploadsSuccessful, displayText, fileCount, remainingFilesCount, selectedFilesCount = 0, }) {\n    const { getFilesUploadedText, getRemainingFilesText, getSelectedFilesText } = displayText;\n    return (React__default.createElement(Text, { className: ComponentClassName.FileUploaderPreviewerText }, selectedFilesCount\n        ? getSelectedFilesText(selectedFilesCount)\n        : allUploadsSuccessful\n            ? getFilesUploadedText(fileCount)\n            : getRemainingFilesText(remainingFilesCount)));\n}\n\nexport { FileListHeader };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { View, Button } from '@aws-amplify/ui-react';\n\nfunction FileListFooter({ displayText, remainingFilesCount, onClearAll, onUploadAll, }) {\n    const { clearAllButtonText, getUploadButtonText } = displayText;\n    return (React__default.createElement(View, { className: ComponentClassName.FileUploaderPreviewerFooter },\n        React__default.createElement(View, { className: ComponentClassName.FileUploaderPreviewerActions },\n            React__default.createElement(Button, { size: \"small\", variation: \"link\", onClick: onClearAll }, clearAllButtonText),\n            React__default.createElement(Button, { size: \"small\", variation: \"primary\", onClick: onUploadAll }, getUploadButtonText(remainingFilesCount)))));\n}\n\nexport { FileListFooter };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { Button } from '@aws-amplify/ui-react';\n\nfunction FilePicker({ children, className = ComponentClassName.FileUploaderFilePicker, size = 'small', ...props }) {\n    return (React__default.createElement(Button, { ...props, className: className, size: size }, children));\n}\n\nexport { FilePicker };\n", "import { humanFileSize } from '@aws-amplify/ui';\n\nconst checkMaxFileSize = ({ file, getFileSizeErrorText, maxFileSize, }) => {\n    if (maxFileSize === undefined)\n        return '';\n    if (file.size > maxFileSize) {\n        return getFileSizeErrorText(humanFileSize(maxFileSize, true));\n    }\n    return '';\n};\n\nexport { checkMaxFileSize };\n", "const defaultFileUploaderDisplayText = {\n    getFilesUploadedText(count) {\n        return `${count} ${count === 1 ? 'file uploaded' : 'files uploaded'}`;\n    },\n    getFileSizeErrorText(sizeText) {\n        return `File size must be below ${sizeText}`;\n    },\n    getRemainingFilesText(count) {\n        return `${count} ${count === 1 ? 'file' : 'files'} uploading`;\n    },\n    getSelectedFilesText(count) {\n        return `${count} ${count === 1 ? 'file' : 'files'} selected`;\n    },\n    getUploadingText(percentage) {\n        return `Uploading${percentage > 0 ? `: ${percentage}%` : ''}`;\n    },\n    getUploadButtonText(count) {\n        return `Upload ${count} ${count === 1 ? 'file' : 'files'}`;\n    },\n    getMaxFilesErrorText(count) {\n        return `Cannot choose more than ${count} ${count === 1 ? 'file' : 'files'}. Remove files before updating`;\n    },\n    getErrorText(message) {\n        return message;\n    },\n    doneButtonText: 'Done',\n    clearAllButtonText: 'Clear all',\n    extensionNotAllowedText: 'Extension not allowed',\n    browseFilesText: 'Browse files',\n    dropFilesText: 'Drop files here or',\n    pauseButtonText: 'Pause',\n    resumeButtonText: 'Resume',\n    uploadSuccessfulText: 'Uploaded',\n    getPausedText(percentage) {\n        return `Paused: ${percentage}%`;\n    },\n};\n\nexport { defaultFileUploaderDisplayText };\n", "const filterAllowedFiles = (files, acceptedFileTypes) => {\n    // Allow any files if acceptedFileTypes is undefined, empty array, or contains '*'\n    if (!acceptedFileTypes ||\n        acceptedFileTypes.length === 0 ||\n        acceptedFileTypes.includes('*')) {\n        return files;\n    }\n    // Remove any files that are not in the accepted file list\n    return files.filter((file) => {\n        const fileName = file.name || '';\n        const mimeType = (file.type || '').toLowerCase();\n        const baseMimeType = mimeType.replace(/\\/.*$/, '');\n        return acceptedFileTypes.some((type) => {\n            const validType = type.trim().toLowerCase();\n            if (validType.charAt(0) === '.') {\n                return fileName.toLowerCase().endsWith(validType);\n            }\n            else if (validType.endsWith('/*')) {\n                // This is something like a image/* mime type\n                return baseMimeType === validType.replace(/\\/.*$/, '');\n            }\n            return mimeType === validType;\n        });\n    });\n};\n\nexport { filterAllowedFiles };\n", "const VERSION = '3.3.9';\n\nexport { VERSION };\n", "import * as React from 'react';\nimport { classNames, ComponentClassName } from '@aws-amplify/ui';\nimport { Image } from '@aws-amplify/ui-react';\nimport { useDeprecationWarning } from '@aws-amplify/ui-react/internal';\nimport { useSetUserAgent, useGetUrl } from '@aws-amplify/ui-react-core';\nimport { VERSION } from '../../version.mjs';\n\nconst MISSING_REQUIRED_PROP_MESSAGE = '`StorageImage` requires either an `imgKey` or `path` prop.';\nconst HAS_DEPRECATED_PROPS_MESSAGE = '`imgKey`, `accessLevel`, and `identityId` will be replaced with `path` in a future major version. See https://ui.docs.amplify.aws/react/connected-components/storage/storageimage#props';\nconst HAS_PATH_AND_KEY_MESSAGE = '`imgKey` is ignored when both `imgKey` and `path` props are provided.';\nconst HAS_PATH_AND_UNSUPPORTED_OPTIONS_MESSAGE = '`accessLevel` and `identityId` are ignored when the `path` prop is provided.';\nconst getDeprecationMessage = ({ hasImgkey, hasPath, hasDeprecatedOptions, }) => {\n    let message = '';\n    if (hasPath && hasImgkey) {\n        message = HAS_PATH_AND_KEY_MESSAGE;\n    }\n    else if (hasPath && hasDeprecatedOptions) {\n        message = HAS_PATH_AND_UNSUPPORTED_OPTIONS_MESSAGE;\n    }\n    else if (hasImgkey) {\n        message = HAS_DEPRECATED_PROPS_MESSAGE;\n    }\n    return message;\n};\nconst StorageImage = ({ accessLevel, className, fallbackSrc, identityId, imgKey, path, onStorageGetError, onGetUrlError, validateObjectExistence = true, ...rest }) => {\n    const hasImgkey = !!imgKey;\n    const hasPath = !!path;\n    const hasDeprecatedOptions = !!accessLevel || !!identityId;\n    const message = getDeprecationMessage({\n        hasDeprecatedOptions,\n        hasImgkey,\n        hasPath,\n    });\n    useDeprecationWarning({ message, shouldWarn: !!message });\n    if (!hasImgkey && !hasPath) {\n        throw new Error(MISSING_REQUIRED_PROP_MESSAGE);\n    }\n    useSetUserAgent({\n        componentName: 'StorageImage',\n        packageName: 'react-storage',\n        version: VERSION,\n    });\n    const onError = onGetUrlError ?? onStorageGetError;\n    const input = React.useMemo(() => ({\n        ...(path ? { path } : { key: imgKey }),\n        onError,\n        options: {\n            accessLevel,\n            targetIdentityId: identityId,\n            validateObjectExistence,\n        },\n    }), [accessLevel, imgKey, identityId, onError, path, validateObjectExistence]);\n    const { url } = useGetUrl(input);\n    return (React.createElement(Image, { ...rest, className: classNames(ComponentClassName.StorageImage, className), src: url?.toString() ?? fallbackSrc }));\n};\n\nexport { HAS_DEPRECATED_PROPS_MESSAGE, HAS_PATH_AND_KEY_MESSAGE, HAS_PATH_AND_UNSUPPORTED_OPTIONS_MESSAGE, MISSING_REQUIRED_PROP_MESSAGE, StorageImage };\n", "import * as React from 'react';\nimport { getLogger, ComponentClassName } from '@aws-amplify/ui';\nimport { VisuallyHidden } from '@aws-amplify/ui-react';\nimport { useDeprecationWarning, useDropZone, useSetUserAgent } from '@aws-amplify/ui-react-core';\nimport { useFileUploader } from '../FileUploader/hooks/useFileUploader/useFileUploader.mjs';\nimport { useUploadFiles } from '../FileUploader/hooks/useUploadFiles/useUploadFiles.mjs';\nimport { FileStatus } from '../FileUploader/types.mjs';\nimport { Container } from './ui/Container/Container.mjs';\nimport { DropZone } from './ui/DropZone/DropZone.mjs';\nimport { FileList } from './ui/FileList/FileList.mjs';\nimport { FileListHeader } from './ui/FileListHeader/FileListHeader.mjs';\nimport { FileListFooter } from './ui/FileListFooter/FileListFooter.mjs';\nimport { FilePicker } from './ui/FilePicker/FilePicker.mjs';\nimport { checkMaxFileSize } from '../FileUploader/utils/checkMaxFileSize.mjs';\nimport { defaultFileUploaderDisplayText } from '../FileUploader/utils/displayText.mjs';\nimport { filterAllowedFiles } from '../FileUploader/utils/filterAllowedFiles.mjs';\nimport 'aws-amplify/auth';\nimport 'aws-amplify/storage';\nimport { VERSION } from '../../version.mjs';\n\nconst logger = getLogger('Storage');\nconst MISSING_REQUIRED_PROPS_MESSAGE = '`StorageManager` requires a `maxFileCount` prop to be provided.';\nconst ACCESS_LEVEL_WITH_PATH_CALLBACK_MESSAGE = '`StorageManager` does not allow usage of a `path` callback prop with an `accessLevel` prop.';\nconst ACCESS_LEVEL_DEPRECATION_MESSAGE = '`accessLevel` has been deprecated and will be removed in a future major version. See migration notes at https://ui.docs.amplify.aws/react/connected-components/storage/storagemanager';\nconst StorageManagerBase = React.forwardRef(function StorageManager({ acceptedFileTypes = [], accessLevel, autoUpload = true, components, defaultFiles, displayText: overrideDisplayText, isResumable = false, maxFileCount, maxFileSize, onFileRemove, onUploadError, onUploadStart, onUploadSuccess, path, processFile, showThumbnails = true, useAccelerateEndpoint, }, ref) {\n    useDeprecationWarning({\n        message: 'The `StorageManager` component has been renamed as the `FileUploader` component.',\n        shouldWarn: false,\n    });\n    if (!maxFileCount) {\n        // eslint-disable-next-line no-console\n        console.warn(MISSING_REQUIRED_PROPS_MESSAGE);\n    }\n    if (accessLevel && typeof path === 'function') {\n        throw new Error(ACCESS_LEVEL_WITH_PATH_CALLBACK_MESSAGE);\n    }\n    useDeprecationWarning({\n        message: ACCESS_LEVEL_DEPRECATION_MESSAGE,\n        shouldWarn: !!accessLevel,\n    });\n    const Components = {\n        Container,\n        DropZone,\n        FileList,\n        FilePicker,\n        FileListHeader,\n        FileListFooter,\n        ...components,\n    };\n    const allowMultipleFiles = maxFileCount === undefined ||\n        (typeof maxFileCount === 'number' && maxFileCount > 1);\n    const displayText = {\n        ...defaultFileUploaderDisplayText,\n        ...overrideDisplayText,\n    };\n    const { getFileSizeErrorText } = displayText;\n    const getMaxFileSizeErrorMessage = (file) => {\n        return checkMaxFileSize({\n            file,\n            maxFileSize,\n            getFileSizeErrorText,\n        });\n    };\n    const { addFiles, clearFiles, files, removeUpload, queueFiles, setUploadingFile, setUploadPaused, setUploadProgress, setUploadSuccess, setUploadResumed, } = useFileUploader(defaultFiles);\n    React.useImperativeHandle(ref, () => ({ clearFiles }));\n    const { dragState, ...dropZoneProps } = useDropZone({\n        acceptedFileTypes,\n        onDropComplete: ({ acceptedFiles, rejectedFiles }) => {\n            if (rejectedFiles && rejectedFiles.length > 0) {\n                logger.warn('Rejected files: ', rejectedFiles);\n            }\n            // We need to filter out files by extension here,\n            // we don't get filenames on the drag event, only on drop\n            const _acceptedFiles = filterAllowedFiles(acceptedFiles, acceptedFileTypes);\n            addFiles({\n                files: _acceptedFiles,\n                status: autoUpload ? FileStatus.QUEUED : FileStatus.ADDED,\n                getFileErrorMessage: getMaxFileSizeErrorMessage,\n            });\n        },\n    });\n    useUploadFiles({\n        accessLevel,\n        files,\n        isResumable,\n        maxFileCount,\n        onUploadError,\n        onUploadSuccess,\n        onUploadStart,\n        setUploadingFile,\n        setUploadProgress,\n        setUploadSuccess,\n        processFile,\n        path,\n        useAccelerateEndpoint,\n    });\n    const onFilePickerChange = (event) => {\n        const { files } = event.target;\n        if (!files || files.length === 0) {\n            return;\n        }\n        addFiles({\n            files: Array.from(files),\n            status: autoUpload ? FileStatus.QUEUED : FileStatus.ADDED,\n            getFileErrorMessage: getMaxFileSizeErrorMessage,\n        });\n    };\n    const onClearAll = () => {\n        clearFiles();\n    };\n    const onUploadAll = () => {\n        queueFiles();\n    };\n    const onPauseUpload = ({ id, uploadTask }) => {\n        uploadTask.pause();\n        setUploadPaused({ id });\n    };\n    const onResumeUpload = ({ id, uploadTask }) => {\n        uploadTask.resume();\n        setUploadResumed({ id });\n    };\n    const onCancelUpload = ({ id, uploadTask }) => {\n        // At this time we don't know if the delete\n        // permissions are enabled (required to cancel upload),\n        // so we do a pause instead and remove from files\n        uploadTask.pause();\n        removeUpload({ id });\n    };\n    const onDeleteUpload = ({ id }) => {\n        // At this time we don't know if the delete\n        // permissions are enabled, so we do a soft delete\n        // from file list, but don't remove from storage\n        removeUpload({ id });\n        if (typeof onFileRemove === 'function') {\n            const file = files.find((file) => file.id === id);\n            if (file) {\n                const key = file.resolvedKey ?? file.key;\n                onFileRemove({ key });\n            }\n        }\n    };\n    // checks if all downloads completed to 100%\n    const allUploadsSuccessful = files.length === 0\n        ? false\n        : files.every((file) => file?.status === FileStatus.UPLOADED);\n    // Displays if over max files\n    const hasMaxFilesError = files.filter((file) => file.progress < 100).length > maxFileCount;\n    const uploadedFilesLength = files.filter((file) => file?.status === FileStatus.UPLOADED).length;\n    const remainingFilesCount = files.length - uploadedFilesLength;\n    // number of files selected for upload when autoUpload is turned off\n    const selectedFilesCount = autoUpload ? 0 : remainingFilesCount;\n    const hasFiles = files.length > 0;\n    const hasUploadActions = !autoUpload && remainingFilesCount > 0;\n    const hiddenInput = React.useRef(null);\n    function handleClick() {\n        if (hiddenInput.current) {\n            hiddenInput.current.click();\n            hiddenInput.current.value = '';\n        }\n    }\n    useSetUserAgent({\n        componentName: 'StorageManager',\n        packageName: 'react-storage',\n        version: VERSION,\n    });\n    return (React.createElement(Components.Container, { className: `${ComponentClassName.StorageManager} ${hasFiles ? ComponentClassName.StorageManagerPreviewer : ''}` },\n        React.createElement(Components.DropZone, { inDropZone: dragState !== 'inactive', ...dropZoneProps, displayText: displayText },\n            React.createElement(React.Fragment, null,\n                React.createElement(Components.FilePicker, { onClick: handleClick }, displayText.browseFilesText),\n                React.createElement(VisuallyHidden, null,\n                    React.createElement(\"input\", { type: \"file\", tabIndex: -1, ref: hiddenInput, onChange: onFilePickerChange, multiple: allowMultipleFiles, accept: acceptedFileTypes.join(',') })))),\n        hasFiles ? (React.createElement(Components.FileListHeader, { allUploadsSuccessful: allUploadsSuccessful, displayText: displayText, fileCount: files.length, remainingFilesCount: remainingFilesCount, selectedFilesCount: selectedFilesCount })) : null,\n        React.createElement(Components.FileList, { displayText: displayText, files: files, isResumable: isResumable, onCancelUpload: onCancelUpload, onDeleteUpload: onDeleteUpload, onResume: onResumeUpload, onPause: onPauseUpload, showThumbnails: showThumbnails, hasMaxFilesError: hasMaxFilesError, maxFileCount: maxFileCount }),\n        hasUploadActions ? (React.createElement(Components.FileListFooter, { displayText: displayText, remainingFilesCount: remainingFilesCount, onClearAll: onClearAll, onUploadAll: onUploadAll })) : null));\n});\n// pass an empty object as first param to avoid destructive action on `StorageManagerBase`\nconst StorageManager = Object.assign({}, StorageManagerBase, {\n    Container,\n    DropZone,\n    FileList,\n    FileListHeader,\n    FileListFooter,\n    FilePicker,\n});\n\nexport { ACCESS_LEVEL_DEPRECATION_MESSAGE, ACCESS_LEVEL_WITH_PATH_CALLBACK_MESSAGE, MISSING_REQUIRED_PROPS_MESSAGE, StorageManager };\n", "import React__default from 'react';\nimport { View } from '@aws-amplify/ui-react';\n\nfunction Container({ children, className, }) {\n    return React__default.createElement(View, { className: className }, children);\n}\n\nexport { Container };\n", "import React__default from 'react';\nimport { classNames, classNameModifier, ComponentClassName } from '@aws-amplify/ui';\nimport { View, Text } from '@aws-amplify/ui-react';\nimport { useIcons, IconUpload } from '@aws-amplify/ui-react/internal';\n\nfunction DropZone({ children, displayText, inDropZone, onDragEnter, onDragLeave, onDragOver, onDragStart, onDrop, testId, }) {\n    const { dropFilesText } = displayText;\n    const icons = useIcons('storageManager');\n    return (React__default.createElement(View, { className: classNames(inDropZone &&\n            classNameModifier(ComponentClassName.StorageManagerDropZone, 'active'), ComponentClassName.StorageManagerDropZone), \"data-testid\": testId, onDragStart: onDragStart, onDragEnter: onDragEnter, onDragLeave: onDragLeave, onDrop: onDrop, onDragOver: onDragOver },\n        React__default.createElement(View, { as: \"span\", \"aria-hidden\": true, className: ComponentClassName.StorageManagerDropZoneIcon }, icons?.upload ?? React__default.createElement(IconUpload, null)),\n        React__default.createElement(Text, { className: ComponentClassName.StorageManagerDropZoneText }, dropFilesText),\n        children));\n}\n\nexport { DropZone };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { View, Alert } from '@aws-amplify/ui-react';\nimport { FileStatus } from '../../../FileUploader/types.mjs';\nimport { FileControl } from './FileControl.mjs';\n\nfunction FileList({ displayText, files, hasMaxFilesError, isResumable, onCancelUpload, onDeleteUpload, onResume, onPause, showThumbnails, maxFileCount, }) {\n    if (files.length < 1) {\n        return null;\n    }\n    const { getMaxFilesErrorText } = displayText;\n    const headingMaxFiles = getMaxFilesErrorText(maxFileCount);\n    return (React__default.createElement(View, { className: ComponentClassName.StorageManagerFileList },\n        files.map((storageFile) => {\n            const { file, status, progress, error, key, isImage, id, uploadTask } = storageFile;\n            const thumbnailUrl = file && isImage ? URL.createObjectURL(file) : '';\n            const loaderIsDeterminate = isResumable ? progress > 0 : true;\n            const isUploading = status === FileStatus.UPLOADING;\n            const onRemove = () => {\n                if (isResumable &&\n                    (status === FileStatus.UPLOADING || status === FileStatus.PAUSED) &&\n                    uploadTask) {\n                    onCancelUpload({ id, uploadTask });\n                }\n                else {\n                    onDeleteUpload({ id });\n                }\n            };\n            const handlePauseUpload = () => {\n                if (uploadTask) {\n                    onPause({ id, uploadTask });\n                }\n            };\n            const handleResumeUpload = () => {\n                if (uploadTask) {\n                    onResume({ id, uploadTask });\n                }\n            };\n            return (React__default.createElement(FileControl, { displayName: key, errorMessage: error, displayText: displayText, isImage: isImage, isUploading: isUploading, isResumable: isResumable, key: id, loaderIsDeterminate: loaderIsDeterminate, onRemove: onRemove, onPause: handlePauseUpload, onResume: handleResumeUpload, progress: progress, showThumbnails: showThumbnails, size: file?.size, status: status, thumbnailUrl: thumbnailUrl }));\n        }),\n        hasMaxFilesError && (React__default.createElement(Alert, { variation: \"error\", heading: headingMaxFiles }))));\n}\n\nexport { FileList };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { View, Loader, Button } from '@aws-amplify/ui-react';\nimport { FileStatus } from '../../../FileUploader/types.mjs';\nimport { FileStatusMessage } from './FileStatusMessage.mjs';\nimport { FileRemoveButton } from './FileRemoveButton.mjs';\nimport { UploadDetails } from './FileDetails.mjs';\nimport { FileThumbnail } from './FileThumbnail.mjs';\n\nfunction FileControl({ onPause, onResume, displayName, errorMessage, isImage, isResumable, loaderIsDeterminate, onRemove, progress, showThumbnails = true, size, status, displayText, thumbnailUrl, }) {\n    const { getPausedText, getUploadingText, uploadSuccessfulText, pauseButtonText, resumeButtonText, } = displayText;\n    return (React__default.createElement(View, { className: ComponentClassName.StorageManagerFile },\n        React__default.createElement(View, { className: ComponentClassName.StorageManagerFileWrapper },\n            showThumbnails ? (React__default.createElement(FileThumbnail, { isImage: isImage, fileName: displayName, url: thumbnailUrl })) : null,\n            React__default.createElement(UploadDetails, { displayName: displayName, fileSize: size }),\n            status === FileStatus.UPLOADING ? (React__default.createElement(Loader, { className: ComponentClassName.StorageManagerLoader, variation: \"linear\", percentage: progress, isDeterminate: loaderIsDeterminate, isPercentageTextHidden: true })) : null,\n            isResumable &&\n                (status === FileStatus.UPLOADING || status === FileStatus.PAUSED) ? (status === FileStatus.PAUSED ? (React__default.createElement(Button, { onClick: onResume, size: \"small\", variation: \"link\" }, resumeButtonText)) : (React__default.createElement(Button, { onClick: onPause, size: \"small\", variation: \"link\" }, pauseButtonText))) : null,\n            React__default.createElement(FileRemoveButton, { altText: `Remove file ${displayName}`, onClick: onRemove })),\n        React__default.createElement(FileStatusMessage, { uploadSuccessfulText: uploadSuccessfulText, getUploadingText: getUploadingText, getPausedText: getPausedText, status: status, errorMessage: errorMessage, percentage: progress })));\n}\n\nexport { FileControl };\n", "import React__default from 'react';\nimport { classNames, ComponentClassName, classNameModifier } from '@aws-amplify/ui';\nimport { Text, View } from '@aws-amplify/ui-react';\nimport { useIcons, IconError, IconCheck } from '@aws-amplify/ui-react/internal';\nimport { FileStatus } from '../../../FileUploader/types.mjs';\n\nconst FileStatusMessage = ({ errorMessage, getPausedText, getUploadingText, percentage, status, uploadSuccessfulText, }) => {\n    const icons = useIcons('storageManager');\n    switch (status) {\n        case FileStatus.UPLOADING: {\n            return (React__default.createElement(Text, { className: ComponentClassName.StorageManagerFileStatus }, getUploadingText(percentage)));\n        }\n        case FileStatus.PAUSED:\n            return (React__default.createElement(Text, { className: ComponentClassName.StorageManagerFileStatus }, getPausedText(percentage)));\n        case FileStatus.UPLOADED:\n            return (React__default.createElement(Text, { className: classNames(ComponentClassName.StorageManagerFileStatus, classNameModifier(ComponentClassName.StorageManagerFileStatus, 'success')) },\n                React__default.createElement(View, { as: \"span\", fontSize: \"xl\" }, icons?.success ?? React__default.createElement(IconCheck, null)),\n                uploadSuccessfulText));\n        case FileStatus.ERROR:\n            return (React__default.createElement(Text, { className: classNames(ComponentClassName.StorageManagerFileStatus, classNameModifier(ComponentClassName.StorageManagerFileStatus, 'error')) },\n                React__default.createElement(View, { as: \"span\", fontSize: \"xl\" }, icons?.error ?? React__default.createElement(IconError, null)),\n                errorMessage));\n        default:\n            return null;\n    }\n};\n\nexport { FileStatusMessage };\n", "import React__default from 'react';\nimport { useIcons, IconClose } from '@aws-amplify/ui-react/internal';\nimport { Button, VisuallyHidden, View } from '@aws-amplify/ui-react';\n\nconst FileRemoveButton = ({ altText, onClick, }) => {\n    const icons = useIcons('storageManager');\n    return (React__default.createElement(Button, { size: \"small\", onClick: onClick, testId: \"storage-manager-remove-button\" },\n        React__default.createElement(VisuallyHidden, null, altText),\n        React__default.createElement(View, { as: \"span\", \"aria-hidden\": true, fontSize: \"medium\" }, icons?.remove ?? React__default.createElement(IconClose, null))));\n};\n\nexport { FileRemoveButton };\n", "import React__default from 'react';\nimport { ComponentClassName, humanFileSize } from '@aws-amplify/ui';\nimport { View, Text } from '@aws-amplify/ui-react';\n\nconst UploadDetails = ({ displayName, fileSize, }) => {\n    return (React__default.createElement(React__default.Fragment, null,\n        React__default.createElement(View, { className: ComponentClassName.StorageManagerFileMain },\n            React__default.createElement(Text, { className: ComponentClassName.StorageManagerFileName }, displayName)),\n        React__default.createElement(Text, { as: \"span\", className: ComponentClassName.StorageManagerFileSize }, fileSize ? humanFileSize(fileSize, true) : '')));\n};\n\nexport { UploadDetails };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { Image, View } from '@aws-amplify/ui-react';\nimport { useIcons, IconFile } from '@aws-amplify/ui-react/internal';\n\nconst FileThumbnail = ({ fileName, isImage, url, }) => {\n    const icons = useIcons('storageManager');\n    const thumbnail = isImage ? (React__default.createElement(Image, { alt: fileName, src: url })) : (icons?.file ?? React__default.createElement(IconFile, null));\n    return (React__default.createElement(View, { className: ComponentClassName.StorageManagerFileImage }, thumbnail));\n};\n\nexport { FileThumbnail };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { Text } from '@aws-amplify/ui-react';\n\nfunction FileListHeader({ allUploadsSuccessful, displayText, fileCount, remainingFilesCount, selectedFilesCount = 0, }) {\n    const { getFilesUploadedText, getRemainingFilesText, getSelectedFilesText } = displayText;\n    return (React__default.createElement(Text, { className: ComponentClassName.StorageManagerPreviewerText }, selectedFilesCount\n        ? getSelectedFilesText(selectedFilesCount)\n        : allUploadsSuccessful\n            ? getFilesUploadedText(fileCount)\n            : getRemainingFilesText(remainingFilesCount)));\n}\n\nexport { FileListHeader };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { View, Button } from '@aws-amplify/ui-react';\n\nfunction FileListFooter({ displayText, remainingFilesCount, onClearAll, onUploadAll, }) {\n    const { clearAllButtonText, getUploadButtonText } = displayText;\n    return (React__default.createElement(View, { className: ComponentClassName.StorageManagerPreviewerFooter },\n        React__default.createElement(View, { className: ComponentClassName.StorageManagerPreviewerActions },\n            React__default.createElement(Button, { size: \"small\", variation: \"link\", onClick: onClearAll }, clearAllButtonText),\n            React__default.createElement(Button, { size: \"small\", variation: \"primary\", onClick: onUploadAll }, getUploadButtonText(remainingFilesCount)))));\n}\n\nexport { FileListFooter };\n", "import React__default from 'react';\nimport { ComponentClassName } from '@aws-amplify/ui';\nimport { Button } from '@aws-amplify/ui-react';\n\nfunction FilePicker({ children, className = ComponentClassName.StorageManagerFilePicker, size = 'small', ...props }) {\n    return (React__default.createElement(Button, { ...props, className: className, size: size }, children));\n}\n\nexport { FilePicker };\n"],
  "mappings": "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",
  "names": ["React", "FileStatus", "FileUploaderActionTypes", "files", "React__default", "key", "import_react", "React__default", "import_react", "React", "import_react", "React", "React", "React", "React", "React", "React", "React", "React__default", "import_react", "import_react", "import_react", "React__default", "import_react", "React__default", "import_react", "React__default", "import_react", "React__default", "React__default", "React__default", "import_react", "React__default", "import_react", "React__default", "import_react", "React__default", "files", "file", "FileUploader", "React", "useDeprecationWarning", "React", "import_react", "Container", "React__default", "import_react", "DropZone", "React__default", "import_react", "import_react", "import_react", "FileStatusMessage", "React__default", "import_react", "FileRemoveButton", "React__default", "import_react", "UploadDetails", "React__default", "import_react", "FileThumbnail", "React__default", "FileControl", "React__default", "FileThumbnail", "UploadDetails", "FileRemoveButton", "FileStatusMessage", "FileList", "React__default", "FileControl", "import_react", "FileListHeader", "React__default", "import_react", "FileListFooter", "React__default", "import_react", "FilePicker", "React__default", "logger", "MISSING_REQUIRED_PROPS_MESSAGE", "ACCESS_LEVEL_WITH_PATH_CALLBACK_MESSAGE", "ACCESS_LEVEL_DEPRECATION_MESSAGE", "Container", "DropZone", "FileList", "FilePicker", "FileListHeader", "FileListFooter", "files", "file", "StorageManager"]
}
