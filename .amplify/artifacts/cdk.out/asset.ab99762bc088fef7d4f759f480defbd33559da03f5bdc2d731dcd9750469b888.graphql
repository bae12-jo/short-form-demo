type History @aws_iam @aws_cognito_user_pools {
  videoName: String!
  modelID: String!
  shortified: Boolean!
  stage: Int!
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

type Highlight @aws_iam @aws_cognito_user_pools {
  VideoName: String!
  Index: String!
  duration: Int
  Question: String
  Text: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

type StageChanged @aws_cognito_user_pools @aws_iam {
  videoId: String!
  stage: Int!
}

type ShortsInput {
  CropHeight: Int
  CropWidth: Int
  SectionDuration: Float
  Xoffset: Float
  Yoffset: Float
}

type Mutation {
  createHistory(input: CreateHistoryInput!, condition: ModelHistoryConditionInput): History @aws_iam @aws_cognito_user_pools
  updateHistory(input: UpdateHistoryInput!, condition: ModelHistoryConditionInput): History @aws_iam @aws_cognito_user_pools
  deleteHistory(input: DeleteHistoryInput!, condition: ModelHistoryConditionInput): History @aws_iam @aws_cognito_user_pools
  createHighlight(input: CreateHighlightInput!, condition: ModelHighlightConditionInput): Highlight @aws_iam @aws_cognito_user_pools
  updateHighlight(input: UpdateHighlightInput!, condition: ModelHighlightConditionInput): Highlight @aws_iam @aws_cognito_user_pools
  deleteHighlight(input: DeleteHighlightInput!, condition: ModelHighlightConditionInput): Highlight @aws_iam @aws_cognito_user_pools
  publish(videoId: String!, stage: Int!): StageChanged @aws_iam @aws_cognito_user_pools
}

type Query {
  getHistory(id: ID!): History @aws_iam @aws_cognito_user_pools
  listHistories(filter: ModelHistoryFilterInput, limit: Int, nextToken: String): ModelHistoryConnection @aws_iam @aws_cognito_user_pools
  getHighlight(VideoName: String!, Index: String!): Highlight @aws_iam @aws_cognito_user_pools
  listHighlights(VideoName: String, Index: ModelStringKeyConditionInput, filter: ModelHighlightFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelHighlightConnection @aws_iam @aws_cognito_user_pools
  generateShort(inputs: String!, videoId: String!, highlight: Int!, question: String!): String @aws_iam @aws_cognito_user_pools
}

type Subscription {
  receive(videoId: String!): StageChanged @aws_subscribe(mutations: ["publish"]) @aws_cognito_user_pools
  onCreateHistory(filter: ModelSubscriptionHistoryFilterInput, owner: String): History @aws_subscribe(mutations: ["createHistory"]) @aws_iam @aws_cognito_user_pools
  onUpdateHistory(filter: ModelSubscriptionHistoryFilterInput, owner: String): History @aws_subscribe(mutations: ["updateHistory"]) @aws_iam @aws_cognito_user_pools
  onDeleteHistory(filter: ModelSubscriptionHistoryFilterInput, owner: String): History @aws_subscribe(mutations: ["deleteHistory"]) @aws_iam @aws_cognito_user_pools
  onCreateHighlight(filter: ModelSubscriptionHighlightFilterInput, owner: String): Highlight @aws_subscribe(mutations: ["createHighlight"]) @aws_iam @aws_cognito_user_pools
  onUpdateHighlight(filter: ModelSubscriptionHighlightFilterInput, owner: String): Highlight @aws_subscribe(mutations: ["updateHighlight"]) @aws_iam @aws_cognito_user_pools
  onDeleteHighlight(filter: ModelSubscriptionHighlightFilterInput, owner: String): Highlight @aws_subscribe(mutations: ["deleteHighlight"]) @aws_iam @aws_cognito_user_pools
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelHistoryConnection @aws_iam @aws_cognito_user_pools {
  items: [History]!
  nextToken: String
}

input ModelHistoryFilterInput {
  videoName: ModelStringInput
  modelID: ModelStringInput
  shortified: ModelBooleanInput
  stage: ModelIntInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelHistoryFilterInput]
  or: [ModelHistoryFilterInput]
  not: ModelHistoryFilterInput
  owner: ModelStringInput
}

input ModelHistoryConditionInput {
  videoName: ModelStringInput
  modelID: ModelStringInput
  shortified: ModelBooleanInput
  stage: ModelIntInput
  and: [ModelHistoryConditionInput]
  or: [ModelHistoryConditionInput]
  not: ModelHistoryConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  owner: ModelStringInput
}

input CreateHistoryInput {
  videoName: String!
  modelID: String!
  shortified: Boolean!
  stage: Int!
  id: ID
}

input UpdateHistoryInput {
  videoName: String
  modelID: String
  shortified: Boolean
  stage: Int
  id: ID!
}

input DeleteHistoryInput {
  id: ID!
}

input ModelSubscriptionHistoryFilterInput {
  videoName: ModelSubscriptionStringInput
  modelID: ModelSubscriptionStringInput
  shortified: ModelSubscriptionBooleanInput
  stage: ModelSubscriptionIntInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionHistoryFilterInput]
  or: [ModelSubscriptionHistoryFilterInput]
  owner: ModelStringInput
}

type ModelHighlightConnection @aws_iam @aws_cognito_user_pools {
  items: [Highlight]!
  nextToken: String
}

input ModelHighlightFilterInput {
  VideoName: ModelStringInput
  Index: ModelStringInput
  duration: ModelIntInput
  Question: ModelStringInput
  Text: ModelStringInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelHighlightFilterInput]
  or: [ModelHighlightFilterInput]
  not: ModelHighlightFilterInput
  owner: ModelStringInput
}

input ModelHighlightConditionInput {
  duration: ModelIntInput
  Question: ModelStringInput
  Text: ModelStringInput
  and: [ModelHighlightConditionInput]
  or: [ModelHighlightConditionInput]
  not: ModelHighlightConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  owner: ModelStringInput
}

input CreateHighlightInput {
  VideoName: String!
  Index: String!
  duration: Int
  Question: String
  Text: String
}

input UpdateHighlightInput {
  VideoName: String!
  Index: String!
  duration: Int
  Question: String
  Text: String
}

input DeleteHighlightInput {
  VideoName: String!
  Index: String!
}

input ModelSubscriptionHighlightFilterInput {
  VideoName: ModelSubscriptionStringInput
  Index: ModelSubscriptionStringInput
  duration: ModelSubscriptionIntInput
  Question: ModelSubscriptionStringInput
  Text: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionHighlightFilterInput]
  or: [ModelSubscriptionHighlightFilterInput]
  owner: ModelStringInput
}

input ModelStringKeyConditionInput {
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  between: [String]
  beginsWith: String
}
